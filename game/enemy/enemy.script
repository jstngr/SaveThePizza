go.property("MAX_SPEED", 200)
go.property("ROTATION_SLERP", 0.07)--0.08)

local COLLISION_RESPONSE = hash("collision_response")
local PLAYER_URL = "controllerCollection:/game/player#player"


function init(self)
	self.speed = self.MAX_SPEED
	self.quat_to_north = vmath.quat_rotation_z(math.rad(0)) 
	particlefx.play("#enemy_footstep")

	go.set_scale(1.5, 1.5, 1)
	if math.random(1, 4) == 4 then
		sprite.play_flipbook("#body", "enemy_fat")
	end
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- rotate and move towards player
	local player_pos = go.get_world_position(PLAYER_URL)
	local pos = go.get_world_position()
	local target_angle = -math.atan2(player_pos.x - pos.x, player_pos.y - pos.y)
	local target_quat = vmath.quat_rotation_z(target_angle)
	local current_quat = go.get_rotation()

	local q = vmath.slerp(self.ROTATION_SLERP, current_quat, target_quat)
	go.set_rotation(q)
	local d = vmath.rotate(q, vmath.vector3(0, 1, 0))
	go.set_position(pos + d * self.speed * dt)


	if self.shadow_id then
		local parent_quat = go.get_rotation()
		local shadow_d = vmath.rotate(vmath.conj(parent_quat) * self.quat_to_north, vmath.vector3(0, 1, 0))
		go.set_position(shadow_d * -4, self.shadow_id)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set_shadow") then
		print("setshadoow")
		self.shadow_id = message.shadow_id
	end
	if message_id == COLLISION_RESPONSE then
		print("enemycollide")
		msg.post("controllerCollection:/controller#controller", "enemy_deleted")
		go.delete(self.shadow_id)
		local p1 = go.get_position()
		local p2 = go.get_position(PLAYER_URL)
		if math.abs(p1.x - p2.x) < 350 and math.abs(p1.y - p2.y) < 600 then
			particlefx.play("#smoke")
		end		
		go.delete()
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
